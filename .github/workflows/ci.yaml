name: CI

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    branches: [ "github-actions" ]
  push:
    tags:
      - 'v*'

env:
  FLUTTER_VERSION: ${{ github.event.inputs.flutter_version || '3.32.0' }}
  FLUTTER_CHANNEL: ${{ github.event.inputs.flutter_channel || 'stable' }}

jobs:
  build-linux:
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Install linux dependencies
        run: sudo apt install -y libgtk-3-dev libmpv-dev mpv

      - name: Check flutter
        run: flutter doctor

      - name: Install flutter dependencies
        run: flutter pub get

      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      #- name: Analyze project source
      #  continue-on-error: true
      #  run: flutter analyze --fatal-infos

      #- name: Run tests
      #  continue-on-error: true
      #  run: flutter test

      - name: Build
        run: flutter build linux --release

      - name: Compress Flutter build
        run: tar -C build/linux/x64/release/bundle -cvf reinplayer_linux_amd64_portable.tar.gz .

      - name: Upload app archive for next steps
        uses: actions/upload-artifact@v4
        with:
          name: reinplayer_linux_amd64_portable
          path: reinplayer_linux_amd64_portable.tar.gz

      - name: Create .deb package
        run: ./dist/build.sh deb

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: reinplayer_linux_amd64.deb.zip
          path: build/reinplayer_linux_amd64.deb

      - name: Upload linux binary
        uses: svenstaro/upload-release-action@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: reinplayer_linux_amd64_portable.tar.gz
          asset_name: reinplayer_linux_amd64_portable.tar.gz
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload debian package
        uses: svenstaro/upload-release-action@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/reinplayer_linux_amd64.deb
          asset_name: reinplayer_linux_amd64.deb
          tag: ${{ github.ref }}
          overwrite: true

  # currently doesn't work because of conflicts
  # limpv2 dependency problem solved, but there is another problem with glib
  # "symbol lookup error: {app name}: undefined symbol: g_once_init_enter_pointer"
  build-linux-snap:
    needs: build-linux
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download app archive
        uses: actions/download-artifact@v4.1.7
        with:
          name: reinplayer_linux_amd64_portable

      - name: uncompress app archive
        run: |
          mkdir -p build/linux/x64/release/bundle
          tar -C build/linux/x64/release/bundle -xvf reinplayer_linux_amd64_portable.tar.gz

      - name: Prepare snap build
        run: ./dist/build.sh snap

      - name: Build .snap
        uses: snapcore/action-build@v1
        id: build-snap
        with:
          path: dist/snap

      - name: copy snap
        run: |
          cp ${{ steps.build-snap.outputs.snap }} reinplayer_linux_amd64.snap
      - name: Upload snap
        uses: actions/upload-artifact@v4
        with:
          name: reinplayer-snap
          path: reinplayer_linux_amd64.snap

      - name: Upload linux snap
        uses: svenstaro/upload-release-action@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.build-snap.outputs.snap }}
          asset_name: reinplayer_linux_amd64.snap
          tag: ${{ github.ref }}
          overwrite: true

  build-linux-appimage:
    needs: build-linux
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download app archive
        uses: actions/download-artifact@v4.1.7
        with:
          name: reinplayer_linux_amd64_portable

      - name: uncompress app archive
        run: |
          mkdir -p build/linux/x64/release/bundle
          tar -C build/linux/x64/release/bundle -xvf reinplayer_linux_amd64_portable.tar.gz

      - name: Prepare snap build
        run: ./dist/build.sh snap

      - name: Build .snap
        uses: snapcore/action-build@v1
        id: build-snap
        with:
          path: dist/snap

      - name: copy snap
        run: |
          cp ${{ steps.build-snap.outputs.snap }} reinplayer_linux_amd64.snap
      - name: Upload snap
        uses: actions/upload-artifact@v4
        with:
          name: reinplayer-snap
          path: reinplayer_linux_amd64.snap

      - name: Upload linux snap
        uses: svenstaro/upload-release-action@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.build-snap.outputs.snap }}
          asset_name: reinplayer_linux_amd64.snap
          tag: ${{ github.ref }}
          overwrite: true